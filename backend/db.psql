DROP TABLE IF EXISTS crypto;
DROP TABLE IF EXISTS subreddit_stats;

--Use Import feature to load asset table with records in crypto.csv
CREATE TABLE IF NOT EXISTS asset (
	asset_id		serial PRIMARY KEY,
	asset_name		text NOT NULL,
	ticker			text NOT NULL,
	website			text,
	subreddit		text
	--created_date	timestamp NOT NULL,
	--modified_date	timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS asset_tag_category (
	asset_tag_category_id	serial PRIMARY KEY,
	description				text NOT NULL
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS asset_tag (
	asset_tag_id			serial PRIMARY KEY,
	tag_name				text NOT NULL,
	description				text NOT NULL,
	asset_tag_category_id	int NOT NULL REFERENCES asset_tag_category (asset_tag_category_id)
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS asset_tag_xref (
	asset_tag_xref_id		serial PRIMARY KEY,
	asset_id				int NOT NULL REFERENCES asset (asset_id),
	asset_tag_id			int NOT NULL REFERENCES asset_tag (asset_tag_id)
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS portfolio_asset (
	portfolio_asset_id		serial PRIMARY KEY,
	asset_id				int NOT NULL REFERENCES asset (asset_id),
	quantity				numeric NOT NULL,
	price_target			numeric,
	buy_reason				text,
	sell_reason				text,
	conviction_rating		numeric,
	hold_length				text,
	notes					text
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS asset_competitor (
	asset_tag_xref_id		serial PRIMARY KEY,
	asset_id				int NOT NULL REFERENCES asset (asset_id),
	competitor_asset_id		int NOT NULL REFERENCES asset_tag (asset_tag_id)
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS section_category (
	section_category_id		serial PRIMARY KEY,
	title					text NOT NULL,
	description				text NOT NULL,
	sort_order				int NOT NULL
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);

INSERT INTO section_category (title, description, sort_order)
VALUES
('About', 'Brief overview of the asset.', 1),
('Decentralization', 'The transfer of control and decision-making from a centralized entity (individual, organization, or group thereof) to a distributed network.', 2);


CREATE TABLE IF NOT EXISTS asset_section (
	asset_section_id		serial PRIMARY KEY,
	asset_id				int NOT NULL REFERENCES asset (asset_id),
	-- title					text NOT NULL,
	section_category_id		int NOT NULL REFERENCES section_category (section_category_id),
	body					text NOT NULL
	--sort_order				int NOT NULL
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);

INSERT INTO asset_section (asset_id, section_category_id, body)
VALUES
(1, 1, 'Bitcoin is a peer-to-peer online currency, meaning that all transactions happen directly between equal, independent network participants, without the need for any intermediary to permit or facilitate them. Bitcoin was created, according to Nakamoto’s own words, to allow “online payments to be sent directly from one party to another without going through a financial institution.”'),
(1, 2, 'Fully decentralized');


--TODO: if the ability to tie multiple assets to one
--event is needed, will need to make xref table.
CREATE TABLE IF NOT EXISTS asset_event (
	asset_tag_xref_id		serial PRIMARY KEY,
	event_name				text NOT NULL,
	asset_id				int NOT NULL REFERENCES asset (asset_id),
	start_date				timestamp NOT NULL,
	end_date				timestamp,
	notes					text,
	is_confirmed			boolean NOT NULL,
	is_starred				boolean NOT NULL
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS asset_link (
	asset_link_id			serial PRIMARY KEY,
	asset_id				int NOT NULL REFERENCES asset (asset_id),
	url						text NOT NULL,
	description				text NOT NULL
	--created_date			timestamp NOT NULL,
	--modified_date			timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS subreddit_stats (
	subreddit_stats_id	serial PRIMARY KEY,
	asset_id			int NOT NULL REFERENCES asset (asset_id),
	subscribers			int NOT NULL,
	stats_datetime		timestamp NOT NULL
);


CREATE TABLE IF NOT EXISTS post (
	post_id			serial PRIMARY KEY,
	subreddit		text NOT NULL,
	datetime		timestamp NOT NULL,
	author			text NOT NULL,
	title			text,
	body			text
);


CREATE TABLE IF NOT EXISTS comment (
	comment_id		serial PRIMARY KEY,
	post_id			int NOT NULL REFERENCES post(post_id),
	datetime		timestamp NOT NULL,
	author			text NOT NULL,
	body			text
)


INSERT INTO asset
VALUES (asset_name, ticker, website, subreddit)
	('Bitcoin', 'BTC', 'https://bitcoin.org', 'r/Bitcoin'),
	('Ethereum', 'ETH', 'https://ethereum.org', 'r/ethereum'),
	('Cardano', 'ADA', 'https://cardano.org/', 'r/cardano'),
	('Algorand', 'ALGO', 'https://www.algorand.com/', 'r/AlgorandOfficial'),
	('Loopring', 'LRC', 'https://loopring.org/', 'r/loopringorg')